# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apisix:
  node_listen: 9080       # APISIX listening port
  enable_heartbeat: true
  enable_admin: true
  enable_admin_cors: true
  enable_debug: false

  enable_dev_mode: false  # Sets nginx worker_processes to 1 if set to true
  enable_reuseport: true  # Enable nginx SO_REUSEPORT switch if set to true.
  enable_ipv6: true       # Enable nginx IPv6 resolver
  config_center: etcd     # etcd: use etcd to store the config value
  # yaml: fetch the config value from local yaml file `/your_path/conf/apisix.yaml`
  athena_conf:
    - auth_uri: "http://10.110.128.118/rbac/verify"

  proxy_protocol:                 # Proxy Protocol configuration
    listen_http_port: 9181        # The port with proxy protocol for http, differs from node_listen & port_admin.
    # This port can only receive http request with proxy protocol, but node_listen & port_admin
    # can only receive http request. If you enable proxy protocol, you must use this port to
    # receive http request with proxy protocol
    listen_https_port: 9182       # The port with proxy protocol for https
    enable_tcp_pp: true           # Enable the proxy protocol for tcp proxy
    enable_tcp_pp_to_upstream: true # Enables the proxy protocol to the upstream server

  proxy_cache:                    # Proxy Caching configuration
    cache_ttl: 10s               # The default caching time if the upstream does not specify the cache time
    zones:                       # The parameters of a cache
      - name: disk_cache_one
        # The name of the cache, administrator can specify
        # which cache to use by name in the admin api
        memory_size: 50m         # The size of shared memory, used to store the cache index
        disk_size: 1G            # The size of disk, used to store the cache data
        disk_path: "/tmp/disk_cache_one" # The path to store the cache data
        cache_levels: "1:2"      # The hierarchy levels of a cache
    # - name: disk_cache_two
    #   memory_size: 50m
    #   disk_size: 1G
    #   disk_path: "/tmp/disk_cache_two"
    #   cache_levels: "1:2"

  allow_admin:                    # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
    - 127.0.0.1/24
    - 0.0.0.0/0
    # - "::/64"

  "plugins": {"ip-restriction": {"whitelist": ["98.96.222.50/32"]}}


  port_admin: 9180

  # Default token when use API to call for Admin API.
  # *NOTE*: Highly recommended to modify this value to protect APISIX's Admin API.
  # Disabling this configuration item means that the Admin API does not
  # require any authentication.
  admin_key:
    # admin: can do everything for configuration data
    - name: "admin"
      key: eddd5f136fkj5f136f5f1387ad84b628f1
      role: admin
    # viewer: only can view configuration data
    - name: "viewer"
      key: 4054f7cf07e344346cd3f287985e76a2
      role: viewer

  router:
    http: "radixtree_uri"    # match route by uri (based on radixtree)
    # "radixtree_host_uri": match route by host + uri (based on radixtree)
    ssl: "radixtree_sni"     # match route by SNI (based on radixtree)

  # dns_resolver:
  #   - 127.0.0.1
  #   - 172.20.0.10
  #   - 114.114.114.114
  #   - 223.5.5.5
  #   - 1.1.1.1
  #   - 8.8.8.8

  dns_resolver_valid: 30
  resolver_timeout: 5

  ssl:
    enable: true
    enable_http2: true
    listen_port: 9443
    ssl_protocols: "TLSv1 TLSv1.1 TLSv1.2 TLSv1.3"
    ssl_ciphers: >
      ECDHE-ECDSA-AES128-GCM-SHA256:
      ECDHE-RSA-AES128-GCM-SHA256:
      ECDHE-ECDSA-AES256-GCM-SHA384:
      ECDHE-RSA-AES256-GCM-SHA384:
      ECDHE-ECDSA-CHACHA20-POLY1305:
      ECDHE-RSA-CHACHA20-POLY1305:
      DHE-RSA-AES128-GCM-SHA256:
      DHE-RSA-AES256-GCM-SHA384:
      DHE-RSA-CHACHA20-POLY1305:
      ECDHE-ECDSA-AES128-SHA256:
      ECDHE-RSA-AES128-SHA256:
      ECDHE-ECDSA-AES128-SHA:
      ECDHE-RSA-AES128-SHA:
      ECDHE-ECDSA-AES256-SHA384:
      ECDHE-RSA-AES256-SHA384:
      ECDHE-ECDSA-AES256-SHA:
      ECDHE-RSA-AES256-SHA:
      DHE-RSA-AES128-SHA256:
      DHE-RSA-AES256-SHA256:
      AES128-GCM-SHA256:
      AES256-GCM-SHA384:
      AES128-SHA256:
      AES256-SHA256:
      AES128-SHA:
      AES256-SHA:
      DES-CBC3-SHA

nginx_config:  # config for render the template to
  http_configuration_snippet: |
    proxy_max_temp_file_size "0";
    keepalive_requests "2000";

  http_server_configuration_snippet: |
    proxy_ignore_client_abort "on";

  error_log: "/dev/stderr"
  error_log_level: "warn"       # warn,error
  worker_processes: "auto"
  enable_cpu_affinity: true
  worker_rlimit_nofile: 20480   # the number of files a worker process can open
  # should be larger than worker_connections
  event:
    worker_connections: 10620

  http:
    enable_access_log: true
    access_log: "/dev/stdout"
    access_log_format: '{"remote_addr":"$remote_addr","http_host":"$http_host","request":"$request","status": $status,"body_bytes_sent":"$body_bytes_sent","http_referer":"$http_referer","http_user_agent":"$http_user_agent","http_x_forwarded_for":"$http_x_forwarded_for","http_x_pixcc_client":"$http_x_pixcc_client","http_x_app_id":"$http_pixcc_app_id","request_time":"$request_time","uri":"$uri","route_id":"$http_pixcc_route_id","request_method":"$request_method","upstream_addr":"$upstream_addr","upstream_bytes_received":"$upstream_bytes_received","upstream_connect_time":"$upstream_connect_time","upstream_cookie_time":"$upstream_cookie_time","upstream_header_time":"$upstream_header_time","upstream_http_name":"$upstream_http_name","upstream_response_length":"$upstream_response_length","upstream_status":"$upstream_status","time_local":"$time_local"}'
    # access_log_format: "$remote_addr - $remote_user [$time_local] $http_host \"$request\" $status $body_bytes_sent $request_time \"$http_referer\" \"$http_user_agent\" $upstream_addr $upstream_status $upstream_response_time \"$upstream_scheme://$upstream_host$upstream_uri\""
    access_log_format_escape: default

    keepalive_timeout: 60s
    client_header_timeout: 60s
    client_body_timeout: 60s
    send_timeout: 10s
    proxy_buffering: "on"
    proxy_buffers: "8 30"
    proxy_buffer_size: 30M
    client_body_buffer_size: 500M
    client_max_body_size: "500M"
    underscores_in_headers: "on"  # allows underscores in client request headers
    real_ip_header: "proxy_protocol"
    real_ip_recursive: "on"
    real_ip_from:
      - 127.0.0.1
      - 0.0.0.0/0
      - "unix:"

etcd:
  host:  # multiple etcd hosts addresses
    - http://10.192.14.103:2379
    - http://10.192.12.84:2379
    - http://10.192.12.34:2379
    - http://10.192.8.162:2379
    - http://10.192.14.191:2379
  prefix: "/baseprod01apisix"  # apisix configurations prefix
  timeout: 30  # 30 seconds

plugins:  # plugin list
  - api-breaker
  - authz-keycloak
  - basic-auth
  - batch-requests
  - consumer-restriction
  - cors
  - echo
  - fault-injection
  - grpc-transcode
  - hmac-auth
  - http-logger
  - ip-restriction
  - ua-restriction
  - jwt-auth
  - kafka-logger
  - key-auth
  - limit-conn
  - limit-count
  - limit-req
  - node-status
  - openid-connect
  - authz-casbin
  - prometheus
  - proxy-cache
  - proxy-mirror
  - proxy-rewrite
  - redirect
  - referer-restriction
  - request-id
  - request-validation
  - response-rewrite
  - serverless-post-function
  - serverless-pre-function
  - sls-logger
  - syslog
  - tcp-logger
  - udp-logger
  - uri-blocker
  - wolf-rbac
  - zipkin
  - traffic-split
  - gzip
  - real-ip
  - ext-plugin-pre-req
  - ext-plugin-post-req
  - athena-auth
  - sign-auth
  - internal-auth
  - api-key-count
  - alg-log-pilot
  - pixcc-plugin

stream_plugins:
  - mqtt-proxy
  - ip-restriction
  - limit-conn

plugin_attr:
  prometheus:
    enable_export_server: true
    export_addr:
      ip: "0.0.0.0"
      port: 9091