{
  "main": {
    "consumer": {
      "type": "object",
      "required": [
        "username"
      ],
      "properties": {
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        },
        "create_time": {
          "type": "integer"
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[a-zA-Z0-9_]+$"
        },
        "update_time": {
          "type": "integer"
        },
        "plugins": {
          "type": "object"
        }
      }
    },
    "ssl": {
      "type": "object",
      "properties": {
        "certs": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 128,
            "maxLength": 65536
          }
        },
        "create_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 128,
            "maxLength": 65536
          }
        },
        "update_time": {
          "type": "integer"
        },
        "validity_start": {
          "type": "integer"
        },
        "exptime": {
          "type": "integer",
          "minimum": 1588262400
        },
        "key": {
          "type": "string",
          "minLength": 128,
          "maxLength": 65536
        },
        "cert": {
          "type": "string",
          "minLength": 128,
          "maxLength": 65536
        },
        "client": {
          "type": "object",
          "properties": {
            "depth": {
              "type": "integer",
              "default": 1,
              "minimum": 0
            },
            "ca": {
              "type": "string",
              "minLength": 128,
              "maxLength": 65536
            }
          },
          "required": [
            "ca"
          ]
        },
        "validity_end": {
          "type": "integer"
        },
        "status": {
          "type": "integer",
          "default": 1,
          "description": "ssl status, 1 to enable, 0 to disable",
          "enum": [
            1,
            0
          ]
        },
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        },
        "sni": {
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
        },
        "snis": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          }
        }
      },
      "oneOf": [
        {
          "required": [
            "sni",
            "key",
            "cert"
          ]
        },
        {
          "required": [
            "snis",
            "key",
            "cert"
          ]
        }
      ]
    },
    "global_rule": {
      "type": "object",
      "required": [
        "plugins"
      ],
      "properties": {
        "update_time": {
          "type": "integer"
        },
        "create_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "plugins": {
          "type": "object"
        }
      }
    },
    "stream_route": {
      "type": "object",
      "properties": {
        "update_time": {
          "type": "integer"
        },
        "create_time": {
          "type": "integer"
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "server_addr": {
          "type": "string",
          "description": "server IP",
          "anyOf": [
            {
              "type": "string",
              "format": "ipv4",
              "title": "IPv4"
            },
            {
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
              "title": "IPv4\/CIDR"
            },
            {
              "type": "string",
              "format": "ipv6",
              "title": "IPv6"
            },
            {
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
              "title": "IPv6\/CIDR"
            }
          ]
        },
        "sni": {
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._]+$",
          "description": "server name indication"
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "server_port": {
          "description": "server port",
          "type": "integer"
        },
        "upstream_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "upstream": {
          "type": "object",
          "properties": {
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "type": "integer",
              "minimum": 0
            },
            "retry_timeout": {
              "type": "number",
              "minimum": 0
            },
            "pass_host": {
              "type": "string",
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "type": "integer",
                      "description": "weight of node",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "priority": {
                        "type": "integer",
                        "description": "priority of node",
                        "default": 0
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "weight": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      },
                      "port": {
                        "type": "integer",
                        "description": "port of node",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ]
                  }
                }
              ]
            },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 1000
                },
                "idle_timeout": {
                  "type": "number",
                  "minimum": 0,
                  "default": 60
                },
                "size": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 320
                }
              }
            },
            "hash_on": {
              "type": "string",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "default": "vars"
            },
            "service_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "checks": {
              "type": "object",
              "properties": {
                "passive": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "type": "integer",
                          "default": 7,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "successes": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "default": {
                    "type": "http",
                    "unhealthy": {
                      "timeouts": 0,
                      "http_failures": 0,
                      "http_statuses": [
                        429,
                        500,
                        503
                      ],
                      "tcp_failures": 0
                    },
                    "healthy": {
                      "http_statuses": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        226,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "timeout": {
                      "type": "number",
                      "default": 1
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "successes": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            302
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        }
                      }
                    },
                    "req_headers": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      }
                    },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "timeouts": {
                          "type": "integer",
                          "default": 3,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 1
                        }
                      }
                    },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "port": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "concurrency": {
                      "type": "integer",
                      "default": 10
                    },
                    "http_path": {
                      "type": "string",
                      "default": "\/"
                    }
                  }
                }
              },
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ]
            },
            "update_time": {
              "type": "integer"
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "timeout": {
              "type": "object",
              "properties": {
                "connect": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "send": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "read": {
                  "type": "number",
                  "exclusiveMinimum": 0
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ]
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": {
                  "description": "group name",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "desc": {
              "type": "string",
              "maxLength": 256
            },
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$"
                },
                {
                  "type": "integer",
                  "minimum": 1
                }
              ]
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "tls": {
              "type": "object",
              "properties": {
                "client_cert": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                },
                "client_key": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                }
              },
              "required": [
                "client_cert",
                "client_key"
              ]
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc\/grpcs\/http\/https. For L4 proxy, it can be one of tcp\/tls\/udp."
            },
            "labels": {
              "type": "object",
              "description": "key\/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64,
                  "minLength": 1
                }
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "type",
                "nodes"
              ]
            },
            {
              "required": [
                "type",
                "service_name",
                "discovery_type"
              ]
            }
          ]
        },
        "remote_addr": {
          "type": "string",
          "description": "client IP",
          "anyOf": [
            {
              "type": "string",
              "format": "ipv4",
              "title": "IPv4"
            },
            {
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
              "title": "IPv4\/CIDR"
            },
            {
              "type": "string",
              "format": "ipv6",
              "title": "IPv6"
            },
            {
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
              "title": "IPv6\/CIDR"
            }
          ]
        },
        "plugins": {
          "type": "object"
        }
      }
    },
    "upstream": {
      "type": "object",
      "properties": {
        "type": {
          "description": "algorithms of load balancing",
          "type": "string"
        },
        "create_time": {
          "type": "integer"
        },
        "retries": {
          "type": "integer",
          "minimum": 0
        },
        "retry_timeout": {
          "type": "number",
          "minimum": 0
        },
        "pass_host": {
          "type": "string",
          "default": "pass",
          "description": "mod of host passing",
          "enum": [
            "pass",
            "node",
            "rewrite"
          ]
        },
        "nodes": {
          "anyOf": [
            {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "integer",
                  "description": "weight of node",
                  "minimum": 0
                }
              }
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string",
                    "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                  },
                  "priority": {
                    "type": "integer",
                    "description": "priority of node",
                    "default": 0
                  },
                  "metadata": {
                    "description": "metadata of node",
                    "type": "object"
                  },
                  "weight": {
                    "type": "integer",
                    "description": "weight of node",
                    "minimum": 0
                  },
                  "port": {
                    "type": "integer",
                    "description": "port of node",
                    "minimum": 1
                  }
                },
                "required": [
                  "host",
                  "port",
                  "weight"
                ]
              }
            }
          ]
        },
        "keepalive_pool": {
          "type": "object",
          "properties": {
            "requests": {
              "type": "integer",
              "minimum": 1,
              "default": 1000
            },
            "idle_timeout": {
              "type": "number",
              "minimum": 0,
              "default": 60
            },
            "size": {
              "type": "integer",
              "minimum": 1,
              "default": 320
            }
          }
        },
        "hash_on": {
          "type": "string",
          "enum": [
            "vars",
            "header",
            "cookie",
            "consumer",
            "vars_combinations"
          ],
          "default": "vars"
        },
        "service_name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "checks": {
          "type": "object",
          "properties": {
            "passive": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "http",
                    "https",
                    "tcp"
                  ],
                  "default": "http"
                },
                "unhealthy": {
                  "type": "object",
                  "properties": {
                    "timeouts": {
                      "type": "integer",
                      "default": 7,
                      "maximum": 254,
                      "minimum": 0
                    },
                    "http_failures": {
                      "type": "integer",
                      "default": 5,
                      "maximum": 254,
                      "minimum": 0
                    },
                    "http_statuses": {
                      "type": "array",
                      "default": [
                        429,
                        500,
                        503
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "integer",
                        "maximum": 599,
                        "minimum": 200
                      },
                      "uniqueItems": true
                    },
                    "tcp_failures": {
                      "type": "integer",
                      "default": 2,
                      "maximum": 254,
                      "minimum": 0
                    }
                  }
                },
                "healthy": {
                  "type": "object",
                  "properties": {
                    "http_statuses": {
                      "type": "array",
                      "default": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        226,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "integer",
                        "maximum": 599,
                        "minimum": 200
                      },
                      "uniqueItems": true
                    },
                    "successes": {
                      "type": "integer",
                      "default": 5,
                      "maximum": 254,
                      "minimum": 0
                    }
                  }
                }
              },
              "default": {
                "type": "http",
                "unhealthy": {
                  "timeouts": 0,
                  "http_failures": 0,
                  "http_statuses": [
                    429,
                    500,
                    503
                  ],
                  "tcp_failures": 0
                },
                "healthy": {
                  "http_statuses": [
                    200,
                    201,
                    202,
                    203,
                    204,
                    205,
                    206,
                    207,
                    208,
                    226,
                    300,
                    301,
                    302,
                    303,
                    304,
                    305,
                    306,
                    307,
                    308
                  ],
                  "successes": 0
                }
              }
            },
            "active": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "http",
                    "https",
                    "tcp"
                  ],
                  "default": "http"
                },
                "timeout": {
                  "type": "number",
                  "default": 1
                },
                "healthy": {
                  "type": "object",
                  "properties": {
                    "successes": {
                      "type": "integer",
                      "default": 2,
                      "maximum": 254,
                      "minimum": 1
                    },
                    "interval": {
                      "type": "integer",
                      "default": 1,
                      "minimum": 1
                    },
                    "http_statuses": {
                      "type": "array",
                      "default": [
                        200,
                        302
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "integer",
                        "maximum": 599,
                        "minimum": 200
                      },
                      "uniqueItems": true
                    }
                  }
                },
                "req_headers": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "uniqueItems": true
                  }
                },
                "host": {
                  "type": "string",
                  "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                },
                "unhealthy": {
                  "type": "object",
                  "properties": {
                    "http_statuses": {
                      "type": "array",
                      "default": [
                        429,
                        404,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "integer",
                        "maximum": 599,
                        "minimum": 200
                      },
                      "uniqueItems": true
                    },
                    "tcp_failures": {
                      "type": "integer",
                      "default": 2,
                      "maximum": 254,
                      "minimum": 1
                    },
                    "timeouts": {
                      "type": "integer",
                      "default": 3,
                      "maximum": 254,
                      "minimum": 1
                    },
                    "interval": {
                      "type": "integer",
                      "default": 1,
                      "minimum": 1
                    },
                    "http_failures": {
                      "type": "integer",
                      "default": 5,
                      "maximum": 254,
                      "minimum": 1
                    }
                  }
                },
                "https_verify_certificate": {
                  "type": "boolean",
                  "default": true
                },
                "port": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "concurrency": {
                  "type": "integer",
                  "default": 10
                },
                "http_path": {
                  "type": "string",
                  "default": "\/"
                }
              }
            }
          },
          "anyOf": [
            {
              "required": [
                "active"
              ]
            },
            {
              "required": [
                "active",
                "passive"
              ]
            }
          ]
        },
        "update_time": {
          "type": "integer"
        },
        "discovery_type": {
          "description": "discovery type",
          "type": "string"
        },
        "timeout": {
          "type": "object",
          "properties": {
            "connect": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "send": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "read": {
              "type": "number",
              "exclusiveMinimum": 0
            }
          },
          "required": [
            "connect",
            "send",
            "read"
          ]
        },
        "discovery_args": {
          "type": "object",
          "properties": {
            "namespace_id": {
              "description": "namespace id",
              "type": "string"
            },
            "group_name": {
              "description": "group name",
              "type": "string"
            }
          }
        },
        "key": {
          "description": "the key of chash for dynamic load balancing",
          "type": "string"
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "upstream_host": {
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
        },
        "tls": {
          "type": "object",
          "properties": {
            "client_cert": {
              "type": "string",
              "minLength": 128,
              "maxLength": 65536
            },
            "client_key": {
              "type": "string",
              "minLength": 128,
              "maxLength": 65536
            }
          },
          "required": [
            "client_cert",
            "client_key"
          ]
        },
        "scheme": {
          "default": "http",
          "enum": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "udp"
          ],
          "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc\/grpcs\/http\/https. For L4 proxy, it can be one of tcp\/tls\/udp."
        },
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        }
      },
      "oneOf": [
        {
          "required": [
            "type",
            "nodes"
          ]
        },
        {
          "required": [
            "type",
            "service_name",
            "discovery_type"
          ]
        }
      ]
    },
    "proto": {
      "type": "object",
      "properties": {
        "update_time": {
          "type": "integer"
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "create_time": {
          "type": "integer"
        },
        "content": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1048576
        }
      },
      "required": [
        "content"
      ]
    },
    "upstream_hash_vars_schema": {
      "type": "string",
      "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname)|arg_[0-9a-zA-z_-]+)$"
    },
    "plugin_config": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "update_time": {
          "type": "integer"
        },
        "create_time": {
          "type": "integer"
        },
        "plugins": {
          "type": "object"
        }
      },
      "required": [
        "id",
        "plugins"
      ]
    },
    "route": {
      "type": "object",
      "anyOf": [
        {
          "required": [
            "plugins",
            "uri"
          ]
        },
        {
          "required": [
            "upstream",
            "uri"
          ]
        },
        {
          "required": [
            "upstream_id",
            "uri"
          ]
        },
        {
          "required": [
            "service_id",
            "uri"
          ]
        },
        {
          "required": [
            "plugins",
            "uris"
          ]
        },
        {
          "required": [
            "upstream",
            "uris"
          ]
        },
        {
          "required": [
            "upstream_id",
            "uris"
          ]
        },
        {
          "required": [
            "service_id",
            "uris"
          ]
        },
        {
          "required": [
            "script",
            "uri"
          ]
        },
        {
          "required": [
            "script",
            "uris"
          ]
        }
      ],
      "allOf": [
        {
          "oneOf": [
            {
              "required": [
                "uri"
              ]
            },
            {
              "required": [
                "uris"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "host"
                    ]
                  },
                  {
                    "required": [
                      "hosts"
                    ]
                  }
                ]
              }
            },
            {
              "required": [
                "host"
              ]
            },
            {
              "required": [
                "hosts"
              ]
            }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "remote_addr"
                    ]
                  },
                  {
                    "required": [
                      "remote_addrs"
                    ]
                  }
                ]
              }
            },
            {
              "required": [
                "remote_addr"
              ]
            },
            {
              "required": [
                "remote_addrs"
              ]
            }
          ]
        }
      ],
      "not": {
        "anyOf": [
          {
            "required": [
              "script",
              "plugins"
            ]
          },
          {
            "required": [
              "script",
              "plugin_config_id"
            ]
          }
        ]
      },
      "properties": {
        "create_time": {
          "type": "integer"
        },
        "uris": {
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "HTTP uri",
            "type": "string"
          },
          "uniqueItems": true
        },
        "methods": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "HTTP method",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS",
              "CONNECT",
              "TRACE"
            ]
          },
          "uniqueItems": true
        },
        "hosts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          },
          "uniqueItems": true
        },
        "remote_addrs": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "description": "client IP",
            "anyOf": [
              {
                "type": "string",
                "format": "ipv4",
                "title": "IPv4"
              },
              {
                "type": "string",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                "title": "IPv4\/CIDR"
              },
              {
                "type": "string",
                "format": "ipv6",
                "title": "IPv6"
              },
              {
                "type": "string",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                "title": "IPv6\/CIDR"
              }
            ]
          },
          "uniqueItems": true
        },
        "host": {
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._]+$"
        },
        "vars": {
          "type": "array"
        },
        "script_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "uri": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4096
        },
        "status": {
          "type": "integer",
          "default": 1,
          "description": "route status, 1 to enable, 0 to disable",
          "enum": [
            1,
            0
          ]
        },
        "plugins": {
          "type": "object"
        },
        "update_time": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "timeout": {
          "type": "object",
          "properties": {
            "connect": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "send": {
              "type": "number",
              "exclusiveMinimum": 0
            },
            "read": {
              "type": "number",
              "exclusiveMinimum": 0
            }
          },
          "required": [
            "connect",
            "send",
            "read"
          ]
        },
        "remote_addr": {
          "type": "string",
          "description": "client IP",
          "anyOf": [
            {
              "type": "string",
              "format": "ipv4",
              "title": "IPv4"
            },
            {
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
              "title": "IPv4\/CIDR"
            },
            {
              "type": "string",
              "format": "ipv6",
              "title": "IPv6"
            },
            {
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
              "title": "IPv6\/CIDR"
            }
          ]
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "service_protocol": {
          "enum": [
            "grpc",
            "http"
          ]
        },
        "upstream_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "script": {
          "type": "string",
          "minLength": 10,
          "maxLength": 102400
        },
        "priority": {
          "type": "integer",
          "default": 0
        },
        "plugin_config_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "service_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        },
        "upstream": {
          "type": "object",
          "properties": {
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "type": "integer",
              "minimum": 0
            },
            "retry_timeout": {
              "type": "number",
              "minimum": 0
            },
            "pass_host": {
              "type": "string",
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "type": "integer",
                      "description": "weight of node",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "priority": {
                        "type": "integer",
                        "description": "priority of node",
                        "default": 0
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "weight": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      },
                      "port": {
                        "type": "integer",
                        "description": "port of node",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ]
                  }
                }
              ]
            },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 1000
                },
                "idle_timeout": {
                  "type": "number",
                  "minimum": 0,
                  "default": 60
                },
                "size": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 320
                }
              }
            },
            "hash_on": {
              "type": "string",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "default": "vars"
            },
            "service_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "checks": {
              "type": "object",
              "properties": {
                "passive": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "type": "integer",
                          "default": 7,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "successes": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "default": {
                    "type": "http",
                    "unhealthy": {
                      "timeouts": 0,
                      "http_failures": 0,
                      "http_statuses": [
                        429,
                        500,
                        503
                      ],
                      "tcp_failures": 0
                    },
                    "healthy": {
                      "http_statuses": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        226,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "timeout": {
                      "type": "number",
                      "default": 1
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "successes": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            302
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        }
                      }
                    },
                    "req_headers": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      }
                    },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "timeouts": {
                          "type": "integer",
                          "default": 3,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 1
                        }
                      }
                    },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "port": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "concurrency": {
                      "type": "integer",
                      "default": 10
                    },
                    "http_path": {
                      "type": "string",
                      "default": "\/"
                    }
                  }
                }
              },
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ]
            },
            "update_time": {
              "type": "integer"
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "timeout": {
              "type": "object",
              "properties": {
                "connect": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "send": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "read": {
                  "type": "number",
                  "exclusiveMinimum": 0
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ]
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": {
                  "description": "group name",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "desc": {
              "type": "string",
              "maxLength": 256
            },
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$"
                },
                {
                  "type": "integer",
                  "minimum": 1
                }
              ]
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "tls": {
              "type": "object",
              "properties": {
                "client_cert": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                },
                "client_key": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                }
              },
              "required": [
                "client_cert",
                "client_key"
              ]
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc\/grpcs\/http\/https. For L4 proxy, it can be one of tcp\/tls\/udp."
            },
            "labels": {
              "type": "object",
              "description": "key\/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64,
                  "minLength": 1
                }
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "type",
                "nodes"
              ]
            },
            {
              "required": [
                "type",
                "service_name",
                "discovery_type"
              ]
            }
          ]
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "filter_func": {
          "type": "string",
          "minLength": 10,
          "pattern": "^function"
        }
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "description": "key\/value pairs to specify attributes",
          "patternProperties": {
            ".*": {
              "type": "string",
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64,
              "minLength": 1
            }
          }
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 100
        },
        "id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "hosts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
          },
          "uniqueItems": true
        },
        "upstream_id": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$"
            },
            {
              "type": "integer",
              "minimum": 1
            }
          ]
        },
        "desc": {
          "type": "string",
          "maxLength": 256
        },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "update_time": {
          "type": "integer"
        },
        "create_time": {
          "type": "integer"
        },
        "upstream": {
          "type": "object",
          "properties": {
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": {
              "type": "integer"
            },
            "retries": {
              "type": "integer",
              "minimum": 0
            },
            "retry_timeout": {
              "type": "number",
              "minimum": 0
            },
            "pass_host": {
              "type": "string",
              "default": "pass",
              "description": "mod of host passing",
              "enum": [
                "pass",
                "node",
                "rewrite"
              ]
            },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "type": "integer",
                      "description": "weight of node",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                      },
                      "priority": {
                        "type": "integer",
                        "description": "priority of node",
                        "default": 0
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "weight": {
                        "type": "integer",
                        "description": "weight of node",
                        "minimum": 0
                      },
                      "port": {
                        "type": "integer",
                        "description": "port of node",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "host",
                      "port",
                      "weight"
                    ]
                  }
                }
              ]
            },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 1000
                },
                "idle_timeout": {
                  "type": "number",
                  "minimum": 0,
                  "default": 60
                },
                "size": {
                  "type": "integer",
                  "minimum": 1,
                  "default": 320
                }
              }
            },
            "hash_on": {
              "type": "string",
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "default": "vars"
            },
            "service_name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            "checks": {
              "type": "object",
              "properties": {
                "passive": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "type": "integer",
                          "default": 7,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            500,
                            503
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            201,
                            202,
                            203,
                            204,
                            205,
                            206,
                            207,
                            208,
                            226,
                            300,
                            301,
                            302,
                            303,
                            304,
                            305,
                            306,
                            307,
                            308
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "successes": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 0
                        }
                      }
                    }
                  },
                  "default": {
                    "type": "http",
                    "unhealthy": {
                      "timeouts": 0,
                      "http_failures": 0,
                      "http_statuses": [
                        429,
                        500,
                        503
                      ],
                      "tcp_failures": 0
                    },
                    "healthy": {
                      "http_statuses": [
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        207,
                        208,
                        226,
                        300,
                        301,
                        302,
                        303,
                        304,
                        305,
                        306,
                        307,
                        308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp"
                      ],
                      "default": "http"
                    },
                    "timeout": {
                      "type": "number",
                      "default": 1
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "successes": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            200,
                            302
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        }
                      }
                    },
                    "req_headers": {
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      }
                    },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "type": "array",
                          "default": [
                            429,
                            404,
                            500,
                            501,
                            502,
                            503,
                            504,
                            505
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "integer",
                            "maximum": 599,
                            "minimum": 200
                          },
                          "uniqueItems": true
                        },
                        "tcp_failures": {
                          "type": "integer",
                          "default": 2,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "timeouts": {
                          "type": "integer",
                          "default": 3,
                          "maximum": 254,
                          "minimum": 1
                        },
                        "interval": {
                          "type": "integer",
                          "default": 1,
                          "minimum": 1
                        },
                        "http_failures": {
                          "type": "integer",
                          "default": 5,
                          "maximum": 254,
                          "minimum": 1
                        }
                      }
                    },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "port": {
                      "type": "integer",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "concurrency": {
                      "type": "integer",
                      "default": 10
                    },
                    "http_path": {
                      "type": "string",
                      "default": "\/"
                    }
                  }
                }
              },
              "anyOf": [
                {
                  "required": [
                    "active"
                  ]
                },
                {
                  "required": [
                    "active",
                    "passive"
                  ]
                }
              ]
            },
            "update_time": {
              "type": "integer"
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "timeout": {
              "type": "object",
              "properties": {
                "connect": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "send": {
                  "type": "number",
                  "exclusiveMinimum": 0
                },
                "read": {
                  "type": "number",
                  "exclusiveMinimum": 0
                }
              },
              "required": [
                "connect",
                "send",
                "read"
              ]
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                },
                "group_name": {
                  "description": "group name",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "desc": {
              "type": "string",
              "maxLength": 256
            },
            "id": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$"
                },
                {
                  "type": "integer",
                  "minimum": 1
                }
              ]
            },
            "name": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            },
            "tls": {
              "type": "object",
              "properties": {
                "client_cert": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                },
                "client_key": {
                  "type": "string",
                  "minLength": 128,
                  "maxLength": 65536
                }
              },
              "required": [
                "client_cert",
                "client_key"
              ]
            },
            "scheme": {
              "default": "http",
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc\/grpcs\/http\/https. For L4 proxy, it can be one of tcp\/tls\/udp."
            },
            "labels": {
              "type": "object",
              "description": "key\/value pairs to specify attributes",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64,
                  "minLength": 1
                }
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "type",
                "nodes"
              ]
            },
            {
              "required": [
                "type",
                "service_name",
                "discovery_type"
              ]
            }
          ]
        },
        "script": {
          "type": "string",
          "minLength": 10,
          "maxLength": 102400
        },
        "plugins": {
          "type": "object"
        }
      }
    },
    "upstream_hash_header_schema": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9-_]+$"
    },
    "plugins": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "stream": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "name"
        ]
      }
    }
  },
  "stream_plugins": {
    "ip-restriction": {
      "schema": {
        "type": "object",
        "properties": {
          "blacklist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4"
                },
                {
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4\/CIDR"
                },
                {
                  "type": "string",
                  "format": "ipv6",
                  "title": "IPv6"
                },
                {
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                  "title": "IPv6\/CIDR"
                }
              ]
            }
          },
          "disable": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "default": "Your IP address is not allowed"
          },
          "whitelist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4"
                },
                {
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4\/CIDR"
                },
                {
                  "type": "string",
                  "format": "ipv6",
                  "title": "IPv6"
                },
                {
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                  "title": "IPv6\/CIDR"
                }
              ]
            }
          }
        },
        "oneOf": [
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "blacklist"
            ]
          }
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 3000,
      "version": 0.1
    },
    "limit-conn": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "key": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "key_type": {
            "type": "string",
            "enum": [
              "var",
              "var_combination"
            ],
            "default": "var"
          },
          "conn": {
            "type": "integer",
            "exclusiveMinimum": 0
          },
          "default_conn_delay": {
            "type": "number",
            "exclusiveMinimum": 0
          },
          "burst": {
            "type": "integer",
            "minimum": 0
          },
          "only_use_default_delay": {
            "type": "boolean",
            "default": false
          }
        },
        "required": [
          "conn",
          "burst",
          "default_conn_delay",
          "key"
        ]
      },
      "priority": 1003,
      "version": 0.1
    },
    "mqtt-proxy": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "protocol_level": {
            "type": "integer"
          },
          "upstream": {
            "type": "object",
            "properties": {
              "host": {
                "type": "string"
              },
              "ip": {
                "type": "string"
              },
              "port": {
                "type": "number"
              }
            },
            "description": "Deprecated. We should configure upstream outside of the plugin",
            "oneOf": [
              {
                "required": [
                  "host",
                  "port"
                ]
              },
              {
                "required": [
                  "ip",
                  "port"
                ]
              }
            ]
          },
          "disable": {
            "type": "boolean"
          },
          "protocol_name": {
            "type": "string"
          }
        },
        "required": [
          "protocol_name",
          "protocol_level"
        ]
      },
      "priority": 1000,
      "version": 0.1
    }
  },
  "plugins": {
    "limit-count": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "policy": {
            "type": "string",
            "enum": [
              "local",
              "redis",
              "redis-cluster"
            ],
            "default": "local"
          },
          "show_limit_quota_header": {
            "type": "boolean",
            "default": true
          },
          "time_window": {
            "type": "integer",
            "exclusiveMinimum": 0
          },
          "group": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "exclusiveMinimum": 0
          },
          "key": {
            "type": "string",
            "default": "remote_addr"
          },
          "disable": {
            "type": "boolean"
          },
          "rejected_msg": {
            "type": "string",
            "minLength": 1
          },
          "rejected_code": {
            "type": "integer",
            "default": 503,
            "maximum": 599,
            "minimum": 200
          },
          "allow_degradation": {
            "type": "boolean",
            "default": false
          },
          "key_type": {
            "type": "string",
            "enum": [
              "var",
              "var_combination",
              "constant"
            ],
            "default": "var"
          }
        },
        "if": {
          "properties": {
            "policy": {
              "enum": [
                "redis"
              ]
            }
          }
        },
        "else": {
          "if": {
            "properties": {
              "policy": {
                "enum": [
                  "redis-cluster"
                ]
              }
            }
          },
          "then": {
            "properties": {
              "redis_timeout": {
                "type": "integer",
                "default": 1000,
                "minimum": 1
              },
              "redis_password": {
                "type": "string",
                "minLength": 0
              },
              "redis_cluster_name": {
                "type": "string"
              },
              "redis_cluster_nodes": {
                "type": "array",
                "minItems": 2,
                "items": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 100
                }
              }
            },
            "required": [
              "redis_cluster_nodes",
              "redis_cluster_name"
            ]
          }
        },
        "then": {
          "properties": {
            "redis_database": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            },
            "redis_host": {
              "type": "string",
              "minLength": 2
            },
            "redis_timeout": {
              "type": "integer",
              "default": 1000,
              "minimum": 1
            },
            "redis_password": {
              "type": "string",
              "minLength": 0
            },
            "redis_port": {
              "type": "integer",
              "default": 6379,
              "minimum": 1
            }
          },
          "required": [
            "redis_host"
          ]
        },
        "required": [
          "count",
          "time_window"
        ]
      },
      "priority": 1002,
      "version": 0.4
    },
    "ua-restriction": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "bypass_missing": {
            "type": "boolean",
            "default": false
          },
          "allowlist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "denylist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "default": "Not allowed"
          }
        }
      },
      "priority": 2999,
      "version": 0.1
    },
    "opentelemetry": {
      "schema": {
        "type": "object",
        "properties": {
          "endpoint": { "type": "string" },

          "sampler": {
            "type": "object",
            "properties": {
              "name":  {
                "type": "string",
                "enum": ["always_on", "always_off"]
              },
              "options": {
                "type": "object"
              }
            },
            "required": ["name"]
          }
        },
        "required": ["endpoint"]
      },
      "priority": 2500,
      "version": 0.1
    },
    "gzip": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "http_version": {
            "enum": [
              1.1,
              1
            ],
            "default": 1.1
          },
          "disable": {
            "type": "boolean"
          },
          "min_length": {
            "type": "integer",
            "default": 20,
            "minimum": 1
          },
          "comp_level": {
            "type": "integer",
            "default": 1,
            "maximum": 9,
            "minimum": 1
          },
          "vary": {
            "type": "boolean"
          },
          "buffers": {
            "type": "object",
            "properties": {
              "size": {
                "type": "integer",
                "default": 4096,
                "minimum": 1
              },
              "number": {
                "type": "integer",
                "default": 32,
                "minimum": 1
              }
            },
            "default": {
              "size": 4096,
              "number": 32
            }
          },
          "types": {
            "anyOf": [
              {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              },
              {
                "enum": [
                  "*"
                ]
              }
            ],
            "default": [
              "text\/html"
            ]
          }
        }
      },
      "priority": 995,
      "version": 0.1
    },
    "consumer-restriction": {
      "schema": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "consumer_name",
              "service_id",
              "route_id"
            ],
            "default": "consumer_name"
          },
          "disable": {
            "type": "boolean"
          },
          "rejected_msg": {
            "type": "string"
          },
          "blacklist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "rejected_code": {
            "type": "integer",
            "default": 403,
            "minimum": 200
          },
          "whitelist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "allowed_by_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "string"
                },
                "methods": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "string",
                    "description": "HTTP method",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS",
                      "CONNECT",
                      "TRACE"
                    ]
                  }
                }
              }
            }
          }
        },
        "$comment": "this is a mark for our injected plugin schema",
        "anyOf": [
          {
            "required": [
              "blacklist"
            ]
          },
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "allowed_by_methods"
            ]
          }
        ]
      },
      "priority": 2400,
      "version": 0.1
    },
    "fault-injection": {
      "schema": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "abort": {
            "type": "object",
            "properties": {
              "body": {
                "type": "string",
                "minLength": 0
              },
              "percentage": {
                "type": "integer",
                "maximum": 100,
                "minimum": 0
              },
              "http_status": {
                "type": "integer",
                "minimum": 200
              },
              "vars": {
                "type": "array",
                "items": {
                  "type": "array"
                },
                "maxItems": 20
              }
            },
            "required": [
              "http_status"
            ]
          },
          "disable": {
            "type": "boolean"
          },
          "delay": {
            "type": "object",
            "properties": {
              "percentage": {
                "type": "integer",
                "maximum": 100,
                "minimum": 0
              },
              "duration": {
                "type": "number",
                "minimum": 0
              },
              "vars": {
                "type": "array",
                "items": {
                  "type": "array"
                },
                "maxItems": 20
              }
            },
            "required": [
              "duration"
            ]
          }
        },
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 11000,
      "version": 0.1
    },
    "referer-restriction": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "bypass_missing": {
            "type": "boolean",
            "default": false
          },
          "blacklist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            }
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "default": "Your referer host is not allowed"
          },
          "whitelist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._]+$"
            }
          }
        },
        "oneOf": [
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "blacklist"
            ]
          }
        ]
      },
      "priority": 2990,
      "version": 0.1
    },
    "hmac-auth": {
      "type": "auth",
      "priority": 2530,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "title": "work with route or service object",
        "properties": {
          "disable": {
            "type": "boolean"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "access_key",
          "secret_key"
        ],
        "title": "work with consumer object",
        "properties": {
          "max_req_body": {
            "type": "integer",
            "title": "Max request body size",
            "default": 524288
          },
          "access_key": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "secret_key": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "clock_skew": {
            "type": "integer",
            "default": 0
          },
          "signed_headers": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            }
          },
          "keep_headers": {
            "type": "boolean",
            "title": "whether to keep the http request header",
            "default": false
          },
          "encode_uri_params": {
            "type": "boolean",
            "title": "Whether to escape the uri parameter",
            "default": true
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "hmac-sha1",
              "hmac-sha256",
              "hmac-sha512"
            ],
            "default": "hmac-sha256"
          },
          "validate_request_body": {
            "type": "boolean",
            "title": "A boolean value telling the plugin to enable body validation",
            "default": false
          }
        }
      }
    },
    "ip-restriction": {
      "schema": {
        "type": "object",
        "properties": {
          "blacklist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4"
                },
                {
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4\/CIDR"
                },
                {
                  "type": "string",
                  "format": "ipv6",
                  "title": "IPv6"
                },
                {
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                  "title": "IPv6\/CIDR"
                }
              ]
            }
          },
          "disable": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "default": "Your IP address is not allowed"
          },
          "whitelist": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4"
                },
                {
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4\/CIDR"
                },
                {
                  "type": "string",
                  "format": "ipv6",
                  "title": "IPv6"
                },
                {
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                  "title": "IPv6\/CIDR"
                }
              ]
            }
          }
        },
        "oneOf": [
          {
            "required": [
              "whitelist"
            ]
          },
          {
            "required": [
              "blacklist"
            ]
          }
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 3000,
      "version": 0.1
    },
    "real-ip": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "trusted_addresses": {
            "type": "array",
            "minItems": 1,
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "ipv4",
                  "title": "IPv4"
                },
                {
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\/([12]?[0-9]|3[0-2])$",
                  "title": "IPv4\/CIDR"
                },
                {
                  "type": "string",
                  "format": "ipv6",
                  "title": "IPv6"
                },
                {
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?\/[0-9]{1,3}$",
                  "title": "IPv6\/CIDR"
                }
              ]
            }
          },
          "source": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "source"
        ]
      },
      "priority": 23000,
      "version": 0.1
    },
    "zipkin": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "service_name": {
            "type": "string",
            "description": "service name for zipkin reporter",
            "default": "APISIX"
          },
          "span_version": {
            "enum": [
              1,
              2
            ],
            "default": 2
          },
          "endpoint": {
            "type": "string"
          },
          "sample_ratio": {
            "type": "number",
            "maximum": 1,
            "minimum": 1e-05
          },
          "server_addr": {
            "type": "string",
            "pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$",
            "description": "default is $server_addr, you can specify your external ip address"
          }
        },
        "required": [
          "endpoint",
          "sample_ratio"
        ]
      },
      "priority": 12011,
      "version": 0.1
    },
    "kafka-logger": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "meta_format": {
            "type": "string",
            "enum": [
              "default",
              "origin"
            ],
            "default": "default"
          },
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "broker_list": {
            "type": "object",
            "minProperties": 1,
            "patternProperties": {
              ".*": {
                "type": "integer",
                "maximum": 65535,
                "description": "the port of kafka broker",
                "minimum": 1
              }
            }
          },
          "kafka_topic": {
            "type": "string"
          },
          "producer_type": {
            "type": "string",
            "enum": [
              "async",
              "sync"
            ],
            "default": "async"
          },
          "required_acks": {
            "type": "integer",
            "enum": [
              0,
              1,
              -1
            ],
            "default": 1
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "include_req_body_expr": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "array"
            }
          },
          "include_resp_body": {
            "type": "boolean",
            "default": false
          },
          "include_resp_body_expr": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "array"
            }
          },
          "cluster_name": {
            "type": "integer",
            "default": 1,
            "minimum": 1
          },
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "name": {
            "type": "string",
            "default": "kafka logger"
          },
          "timeout": {
            "type": "integer",
            "default": 3,
            "minimum": 1
          },
          "key": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          }
        },
        "required": [
          "broker_list",
          "kafka_topic"
        ]
      },
      "priority": 403,
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "host": "$host",
              "client_ip": "$remote_addr",
              "@timestamp": "$time_iso8601"
            }
          }
        }
      }
    },
    "sls-logger": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "port": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "default": "sls-logger"
          },
          "timeout": {
            "type": "integer",
            "default": 5000,
            "minimum": 1
          },
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "host": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "project": {
            "type": "string"
          },
          "logstore": {
            "type": "string"
          },
          "access_key_id": {
            "type": "string"
          },
          "access_key_secret": {
            "type": "string"
          }
        },
        "required": [
          "host",
          "port",
          "project",
          "logstore",
          "access_key_id",
          "access_key_secret"
        ]
      },
      "priority": 406,
      "version": 0.1
    },
    "proxy-cache": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "cache_strategy": {
            "type": "string",
            "enum": [
              "disk",
              "memory"
            ],
            "default": "disk"
          },
          "cache_key": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
              "description": "a key for caching"
            },
            "default": [
              "$host",
              "$request_uri"
            ]
          },
          "cache_http_status": {
            "type": "array",
            "default": [
              200,
              301,
              404
            ],
            "minItems": 1,
            "items": {
              "type": "integer",
              "maximum": 599,
              "description": "http response status",
              "minimum": 200
            },
            "uniqueItems": true
          },
          "cache_method": {
            "type": "array",
            "default": [
              "GET",
              "HEAD"
            ],
            "minItems": 1,
            "items": {
              "type": "string",
              "description": "supported http method",
              "enum": [
                "GET",
                "POST",
                "HEAD"
              ]
            },
            "uniqueItems": true
          },
          "hide_cache_headers": {
            "type": "boolean",
            "default": false
          },
          "cache_control": {
            "type": "boolean",
            "default": false
          },
          "cache_bypass": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
            }
          },
          "no_cache": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
            }
          },
          "disable": {
            "type": "boolean"
          },
          "cache_ttl": {
            "type": "integer",
            "default": 300,
            "minimum": 1
          },
          "cache_zone": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "default": "disk_cache_one"
          }
        }
      },
      "priority": 1009,
      "version": 0.2
    },
    "sign-auth": {
      "type": "auth",
      "priority": 5001,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "ip_check": {
            "type": "string",
            "default": "X-IP-Check"
          },
          "nonce": {
            "type": "string",
            "default": "X-Nonce"
          },
          "timestamp": {
            "type": "string",
            "default": "X-Timestamp"
          },
          "sign": {
            "type": "string",
            "default": "X-Sign"
          },
          "disable": {
            "type": "boolean"
          },
          "app_key": {
            "type": "string",
            "default": "X-App-Key"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "app_key",
          "app_secret",
          "permissions",
          "permission_mode"
        ],
        "properties": {
          "app_secret": {
            "type": "string"
          },
          "permission_hosts": {
            "type": "array",
            "description": "List of allowed domain names",
            "items": {
              "type": "string"
            },
            "default": {}
          },
          "permission_mode": {
            "type": "number"
          },
          "hide_credentials": {
            "type": "boolean",
            "default": true
          },
          "expired_ttl": {
            "type": "number",
            "default": 180
          },
          "permissions": {
            "type": "object"
          },
          "app_key": {
            "type": "string"
          }
        }
      }
    },
    "request-id": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "include_in_response": {
            "type": "boolean",
            "default": true
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "uuid",
              "snowflake"
            ],
            "default": "uuid"
          },
          "header_name": {
            "type": "string",
            "default": "X-Request-Id"
          }
        }
      },
      "priority": 11010,
      "version": 0.1
    },
    "limit-req": {
      "schema": {
        "type": "object",
        "properties": {
          "rejected_msg": {
            "type": "string",
            "minLength": 1
          },
          "key": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "burst": {
            "type": "number",
            "minimum": 0
          },
          "rate": {
            "type": "number",
            "exclusiveMinimum": 0
          },
          "nodelay": {
            "type": "boolean",
            "default": false
          },
          "rejected_code": {
            "type": "integer",
            "default": 503,
            "maximum": 599,
            "minimum": 200
          },
          "allow_degradation": {
            "type": "boolean",
            "default": false
          },
          "key_type": {
            "type": "string",
            "enum": [
              "var",
              "var_combination"
            ],
            "default": "var"
          }
        },
        "required": [
          "rate",
          "burst",
          "key"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 1001,
      "version": 0.1
    },
    "proxy-rewrite": {
      "schema": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$",
            "description": "new host for upstream"
          },
          "scheme": {
            "type": "string",
            "description": "new scheme for upstream",
            "enum": [
              "http",
              "https"
            ]
          },
          "disable": {
            "type": "boolean"
          },
          "uri": {
            "type": "string",
            "description": "new uri for upstream",
            "minLength": 1,
            "maxLength": 4096,
            "pattern": "^\\\/.*"
          },
          "regex_uri": {
            "type": "array",
            "description": "new uri that substitute from client uri for upstream, lower priority than uri property",
            "minItems": 2,
            "items": {
              "description": "regex uri",
              "type": "string"
            },
            "maxItems": 2
          },
          "headers": {
            "type": "object",
            "minProperties": 1,
            "description": "new headers for request"
          },
          "method": {
            "type": "string",
            "description": "proxy route method",
            "enum": [
              "LOCK",
              "UNLOCK",
              "PATCH",
              "TRACE",
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "MKCOL",
              "COPY",
              "MOVE",
              "OPTIONS",
              "PROPFIND"
            ]
          }
        },
        "minProperties": 1,
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 1008,
      "version": 0.1
    },
    "limit-conn": {
      "schema": {
        "type": "object",
        "properties": {
          "conn": {
            "type": "integer",
            "exclusiveMinimum": 0
          },
          "default_conn_delay": {
            "type": "number",
            "exclusiveMinimum": 0
          },
          "only_use_default_delay": {
            "type": "boolean",
            "default": false
          },
          "key": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "rejected_msg": {
            "type": "string",
            "minLength": 1
          },
          "burst": {
            "type": "integer",
            "minimum": 0
          },
          "rejected_code": {
            "type": "integer",
            "default": 503,
            "maximum": 599,
            "minimum": 200
          },
          "allow_degradation": {
            "type": "boolean",
            "default": false
          },
          "key_type": {
            "type": "string",
            "enum": [
              "var",
              "var_combination"
            ],
            "default": "var"
          }
        },
        "required": [
          "conn",
          "burst",
          "default_conn_delay",
          "key"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 1003,
      "version": 0.1
    },
    "jwt-auth": {
      "type": "auth",
      "priority": 2510,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "cookie": {
            "type": "string",
            "default": "jwt"
          },
          "disable": {
            "type": "boolean"
          },
          "header": {
            "type": "string",
            "default": "authorization"
          },
          "query": {
            "type": "string",
            "default": "jwt"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "exp": {
            "type": "integer",
            "default": 86400,
            "minimum": 1
          },
          "algorithm": {
            "type": "string",
            "enum": [
              "HS256",
              "HS512",
              "RS256"
            ],
            "default": "HS256"
          },
          "base64_secret": {
            "type": "boolean",
            "default": false
          },
          "vault": {
            "type": "object",
            "properties": {}
          }
        },
        "dependencies": {
          "algorithm": {
            "oneOf": [
              {
                "properties": {
                  "algorithm": {
                    "enum": [
                      "HS256",
                      "HS512"
                    ],
                    "default": "HS256"
                  }
                }
              },
              {
                "properties": {
                  "algorithm": {
                    "enum": [
                      "RS256"
                    ]
                  },
                  "public_key": {
                    "type": "string"
                  },
                  "private_key": {
                    "type": "string"
                  }
                },
                "required": [
                  "public_key",
                  "private_key"
                ]
              },
              {
                "properties": {
                  "algorithm": {
                    "enum": [
                      "RS256"
                    ]
                  },
                  "vault": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "required": [
                  "vault"
                ]
              }
            ]
          }
        }
      }
    },
    "proxy-mirror": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "host": {
            "type": "string",
            "pattern": "^http(s)?:\\\/\\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$"
          },
          "disable": {
            "type": "boolean"
          },
          "path": {
            "type": "string",
            "pattern": "^\/[^?&]+$"
          },
          "sample_ratio": {
            "type": "number",
            "default": 1,
            "maximum": 1,
            "minimum": 1e-05
          }
        },
        "required": [
          "host"
        ]
      },
      "priority": 1010,
      "version": 0.1
    },
    "prometheus": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "prefer_name": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "priority": 500,
      "version": 0.2
    },
    "serverless-pre-function": {
      "schema": {
        "type": "object",
        "properties": {
          "functions": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "disable": {
            "type": "boolean"
          },
          "phase": {
            "type": "string",
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "default": "access"
          }
        },
        "required": [
          "functions"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 10000,
      "version": 0.1
    },
    "basic-auth": {
      "type": "auth",
      "priority": 2520,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "title": "work with route or service object",
        "properties": {
          "hide_credentials": {
            "type": "boolean",
            "default": false
          },
          "disable": {
            "type": "boolean"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "work with consumer object",
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      }
    },
    "uri-blocker": {
      "schema": {
        "type": "object",
        "properties": {
          "block_rules": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4096
            },
            "uniqueItems": true
          },
          "disable": {
            "type": "boolean"
          },
          "case_insensitive": {
            "type": "boolean",
            "default": false
          },
          "rejected_code": {
            "type": "integer",
            "default": 403,
            "minimum": 200
          },
          "rejected_msg": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "block_rules"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 2900,
      "version": 0.1
    },
    "api-breaker": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "unhealthy": {
            "type": "object",
            "properties": {
              "http_statuses": {
                "type": "array",
                "default": [
                  500
                ],
                "minItems": 1,
                "items": {
                  "type": "integer",
                  "maximum": 599,
                  "minimum": 500
                },
                "uniqueItems": true
              },
              "failures": {
                "type": "integer",
                "default": 3,
                "minimum": 1
              }
            },
            "default": {
              "http_statuses": [
                500
              ],
              "failures": 3
            }
          },
          "disable": {
            "type": "boolean"
          },
          "healthy": {
            "type": "object",
            "properties": {
              "http_statuses": {
                "type": "array",
                "default": [
                  200
                ],
                "minItems": 1,
                "items": {
                  "type": "integer",
                  "maximum": 499,
                  "minimum": 200
                },
                "uniqueItems": true
              },
              "successes": {
                "type": "integer",
                "default": 3,
                "minimum": 1
              }
            },
            "default": {
              "http_statuses": [
                200
              ],
              "successes": 3
            }
          },
          "max_breaker_sec": {
            "type": "integer",
            "default": 300,
            "minimum": 3
          },
          "break_response_code": {
            "type": "integer",
            "maximum": 599,
            "minimum": 200
          }
        },
        "required": [
          "break_response_code"
        ]
      },
      "priority": 1005,
      "version": 0.1
    },
    "request-validation": {
      "type": "validation",
      "priority": 2800,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "rejected_msg": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "disable": {
            "type": "boolean"
          },
          "header_schema": {
            "type": "object"
          },
          "body_schema": {
            "type": "object"
          },
          "rejected_code": {
            "type": "integer",
            "default": 400,
            "maximum": 599,
            "minimum": 200
          }
        },
        "anyOf": [
          {
            "required": [
              "header_schema"
            ]
          },
          {
            "required": [
              "body_schema"
            ]
          }
        ]
      }
    },
    "authz-keycloak": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "ssl_verify": {
            "type": "boolean",
            "default": true
          },
          "permissions": {
            "type": "array",
            "default": {},
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 100
            },
            "uniqueItems": true
          },
          "discovery": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4096
          },
          "token_endpoint": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4096
          },
          "keepalive": {
            "type": "boolean",
            "default": true
          },
          "audience": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100,
            "description": "Deprecated, use `client_id` instead."
          },
          "client_id": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "client_secret": {
            "type": "string",
            "minLength": 1,
            "maxLength": 100
          },
          "grant_type": {
            "type": "string",
            "default": "urn:ietf:params:oauth:grant-type:uma-ticket",
            "minLength": 1,
            "enum": [
              "urn:ietf:params:oauth:grant-type:uma-ticket"
            ],
            "maxLength": 100
          },
          "policy_enforcement_mode": {
            "type": "string",
            "enum": [
              "ENFORCING",
              "PERMISSIVE"
            ],
            "default": "ENFORCING"
          },
          "timeout": {
            "type": "integer",
            "default": 3000,
            "minimum": 1000
          },
          "lazy_load_paths": {
            "type": "boolean",
            "default": false
          },
          "http_method_as_scope": {
            "type": "boolean",
            "default": false
          },
          "cache_ttl_seconds": {
            "type": "integer",
            "default": 86400,
            "minimum": 1
          },
          "access_denied_redirect_uri": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2048
          },
          "access_token_expires_in": {
            "type": "integer",
            "default": 300,
            "minimum": 1
          },
          "access_token_expires_leeway": {
            "type": "integer",
            "default": 0,
            "minimum": 0
          },
          "refresh_token_expires_in": {
            "type": "integer",
            "default": 3600,
            "minimum": 1
          },
          "refresh_token_expires_leeway": {
            "type": "integer",
            "default": 0,
            "minimum": 0
          },
          "disable": {
            "type": "boolean"
          },
          "keepalive_pool": {
            "type": "integer",
            "default": 5,
            "minimum": 1
          },
          "keepalive_timeout": {
            "type": "integer",
            "default": 60000,
            "minimum": 1000
          },
          "resource_registration_endpoint": {
            "type": "string",
            "minLength": 1,
            "maxLength": 4096
          }
        },
        "allOf": [
          {
            "anyOf": [
              {
                "required": [
                  "discovery"
                ]
              },
              {
                "required": [
                  "token_endpoint"
                ]
              }
            ]
          },
          {
            "anyOf": [
              {
                "required": [
                  "client_id"
                ]
              },
              {
                "required": [
                  "audience"
                ]
              }
            ]
          },
          {
            "anyOf": [
              {
                "properties": {
                  "lazy_load_paths": {
                    "enum": [
                      false
                    ]
                  }
                }
              },
              {
                "properties": {
                  "lazy_load_paths": {
                    "enum": [
                      true
                    ]
                  }
                },
                "anyOf": [
                  {
                    "required": [
                      "discovery"
                    ]
                  },
                  {
                    "required": [
                      "resource_registration_endpoint"
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      "priority": 2000,
      "version": 0.1
    },
    "api-key-count": {
      "type": "auth",
      "priority": 5000,
      "version": 0.1,
      "consumer_schema": {
        "type": "object",
        "required": [
          "redis_host",
          "redis_port",
          "redis_password"
        ],
        "properties": {
          "redis_database": {
            "type": "integer",
            "default": 0
          },
          "redis_host": {
            "type": "string"
          },
          "redis_timeout": {
            "type": "integer",
            "default": 1000
          },
          "redis_password": {
            "type": "string"
          },
          "redis_expired_ttl": {
            "type": "integer",
            "default": 259200
          },
          "redis_port": {
            "type": "integer",
            "default": 6379
          }
        }
      },
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "mtlab_key_2": {
            "type": "string",
            "default": "api_key"
          },
          "mtlab_sign_field": {
            "type": "string",
            "default": "Authorization"
          },
          "disable": {
            "type": "boolean"
          },
          "athena_key": {
            "type": "string",
            "default": "X-App-Key"
          },
          "mtlab_key_1": {
            "type": "string",
            "default": "app_key"
          }
        }
      }
    },
    "batch-requests": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          }
        }
      },
      "priority": 4010,
      "version": 0.1,
      "scope": "global",
      "metadata_schema": {
        "type": "object",
        "properties": {
          "max_body_size": {
            "type": "integer",
            "default": 1048576,
            "description": "max pipeline body size in bytes",
            "exclusiveMinimum": 0
          }
        }
      }
    },
    "wolf-rbac": {
      "type": "auth",
      "priority": 2555,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "appid": {
            "type": "string",
            "default": "unset"
          },
          "disable": {
            "type": "boolean"
          },
          "server": {
            "type": "string",
            "default": "http:\/\/127.0.0.1:12180"
          },
          "header_prefix": {
            "type": "string",
            "default": "X-"
          }
        }
      }
    },
    "response-rewrite": {
      "schema": {
        "type": "object",
        "properties": {
          "body": {
            "description": "new body for response",
            "type": "string"
          },
          "vars": {
            "type": "array"
          },
          "status_code": {
            "type": "integer",
            "maximum": 598,
            "description": "new status code for response",
            "minimum": 200
          },
          "headers": {
            "type": "object",
            "minProperties": 1,
            "description": "new headers for response"
          },
          "disable": {
            "type": "boolean"
          },
          "body_base64": {
            "type": "boolean",
            "description": "whether new body for response need base64 decode before return",
            "default": false
          }
        },
        "minProperties": 1,
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 899,
      "version": 0.1
    },
    "ext-plugin-post-req": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "conf": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "disable": {
            "type": "boolean"
          },
          "allow_degradation": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "priority": -3000,
      "version": 0.1
    },
    "key-auth": {
      "type": "auth",
      "priority": 2500,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          },
          "header": {
            "type": "string",
            "default": "apikey"
          },
          "query": {
            "type": "string",
            "default": "apikey"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          }
        }
      }
    },
    "authz-casbin": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "policy": {
            "type": "string"
          },
          "model_path": {
            "type": "string"
          },
          "policy_path": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          }
        },
        "oneOf": [
          {
            "required": [
              "model_path",
              "policy_path",
              "username"
            ]
          },
          {
            "required": [
              "model",
              "policy",
              "username"
            ]
          }
        ]
      },
      "priority": 2560,
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "policy": {
            "type": "string"
          },
          "model": {
            "type": "string"
          }
        },
        "required": [
          "model",
          "policy"
        ]
      }
    },
    "ext-plugin-pre-req": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "conf": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 128
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "disable": {
            "type": "boolean"
          },
          "allow_degradation": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "priority": 12000,
      "version": 0.1
    },
    "echo": {
      "schema": {
        "type": "object",
        "properties": {
          "body": {
            "description": "body to replace upstream response.",
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "before_body": {
            "description": "body before the filter phase.",
            "type": "string"
          },
          "headers": {
            "type": "object",
            "minProperties": 1,
            "description": "new headers for response"
          },
          "after_body": {
            "description": "body after the modification of filter phase.",
            "type": "string"
          }
        },
        "minProperties": 1,
        "$comment": "this is a mark for our injected plugin schema",
        "anyOf": [
          {
            "required": [
              "before_body"
            ]
          },
          {
            "required": [
              "body"
            ]
          },
          {
            "required": [
              "after_body"
            ]
          }
        ]
      },
      "priority": 412,
      "version": 0.1
    },
    "redirect": {
      "schema": {
        "type": "object",
        "properties": {
          "http_to_https": {
            "type": "boolean"
          },
          "ret_code": {
            "type": "integer",
            "default": 302,
            "minimum": 200
          },
          "encode_uri": {
            "type": "boolean",
            "default": false
          },
          "append_query_string": {
            "type": "boolean",
            "default": false
          },
          "uri": {
            "type": "string",
            "minLength": 2,
            "pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)"
          },
          "regex_uri": {
            "type": "array",
            "description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template",
            "minItems": 2,
            "items": {
              "description": "regex uri",
              "type": "string"
            },
            "maxItems": 2
          },
          "disable": {
            "type": "boolean"
          }
        },
        "oneOf": [
          {
            "required": [
              "uri"
            ]
          },
          {
            "required": [
              "regex_uri"
            ]
          },
          {
            "required": [
              "http_to_https"
            ]
          }
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 900,
      "version": 0.1
    },
    "internal-auth": {
      "type": "auth",
      "priority": 5002,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "api_secret": {
            "type": "string",
            "default": "api_secret"
          },
          "disable": {
            "type": "boolean"
          },
          "auth_type": {
            "type": "string",
            "default": "AuthorizationType"
          },
          "sign": {
            "type": "string",
            "default": "Authorization"
          },
          "api_key": {
            "type": "string",
            "default": "api_key"
          },
          "app_key": {
            "type": "string",
            "default": "app_key"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "api_key",
          "api_secret",
          "permissions",
          "permission_mode"
        ],
        "properties": {
          "api_secret": {
            "type": "string"
          },
          "permission_mode": {
            "type": "number"
          },
          "hide_credentials": {
            "type": "boolean",
            "default": true
          },
          "permissions": {
            "type": "object"
          },
          "api_key": {
            "type": "string"
          }
        }
      }
    },
    "openid-connect": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "introspection_endpoint": {
            "type": "string"
          },
          "introspection_endpoint_auth_method": {
            "type": "string",
            "default": "client_secret_basic"
          },
          "realm": {
            "type": "string",
            "default": "apisix"
          },
          "logout_path": {
            "type": "string",
            "default": "\/logout"
          },
          "discovery": {
            "type": "string"
          },
          "redirect_uri": {
            "type": "string",
            "description": "use ngx.var.request_uri if not configured"
          },
          "scope": {
            "type": "string",
            "default": "openid"
          },
          "post_logout_redirect_uri": {
            "type": "string",
            "description": "the URI will be redirect when request logout_path"
          },
          "token_signing_alg_values_expected": {
            "type": "string"
          },
          "set_access_token_header": {
            "type": "boolean",
            "description": "Whether the access token should be added as a header to the request for downstream",
            "default": true
          },
          "access_token_in_authorization_header": {
            "type": "boolean",
            "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
            "default": false
          },
          "bearer_only": {
            "type": "boolean",
            "default": false
          },
          "timeout": {
            "type": "integer",
            "default": 3,
            "description": "timeout in seconds",
            "minimum": 1
          },
          "set_id_token_header": {
            "type": "boolean",
            "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
            "default": true
          },
          "set_userinfo_header": {
            "type": "boolean",
            "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
            "default": true
          },
          "disable": {
            "type": "boolean"
          },
          "ssl_verify": {
            "type": "boolean",
            "default": false
          },
          "client_secret": {
            "type": "string"
          },
          "client_id": {
            "type": "string"
          },
          "public_key": {
            "type": "string"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "discovery"
        ]
      },
      "priority": 2599,
      "version": 0.1
    },
    "alg-log-pilot": {
      "type": "auth",
      "priority": 6000,
      "version": 0.1,
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "sample_ratio": {
            "type": "number",
            "default": 1,
            "maximum": 1,
            "minimum": 1e-05
          },
          "disable": {
            "type": "boolean"
          }
        }
      },
      "consumer_schema": {
        "type": "object",
        "required": [
          "host",
          "path"
        ],
        "properties": {
          "host": {
            "type": "string",
            "pattern": "^http(s)?:\\\/\\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$"
          },
          "path": {
            "type": "string",
            "pattern": "^\/[^?&]+$"
          }
        }
      }
    },
    "traffic-split": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "match": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vars": {
                        "type": "array"
                      }
                    }
                  }
                },
                "weighted_upstreams": {
                  "type": "array",
                  "default": [
                    {
                      "weight": 1
                    }
                  ],
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "upstream_id": {
                        "anyOf": [
                          {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 64,
                            "pattern": "^[a-zA-Z0-9-_.]+$"
                          },
                          {
                            "type": "integer",
                            "minimum": 1
                          }
                        ]
                      },
                      "upstream": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "algorithms of load balancing",
                            "type": "string"
                          },
                          "create_time": {
                            "type": "integer"
                          },
                          "retries": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "retry_timeout": {
                            "type": "number",
                            "minimum": 0
                          },
                          "pass_host": {
                            "type": "string",
                            "default": "pass",
                            "description": "mod of host passing",
                            "enum": [
                              "pass",
                              "node",
                              "rewrite"
                            ]
                          },
                          "nodes": {
                            "anyOf": [
                              {
                                "type": "object",
                                "patternProperties": {
                                  ".*": {
                                    "type": "integer",
                                    "description": "weight of node",
                                    "minimum": 0
                                  }
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "host": {
                                      "type": "string",
                                      "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                                    },
                                    "priority": {
                                      "type": "integer",
                                      "description": "priority of node",
                                      "default": 0
                                    },
                                    "metadata": {
                                      "description": "metadata of node",
                                      "type": "object"
                                    },
                                    "weight": {
                                      "type": "integer",
                                      "description": "weight of node",
                                      "minimum": 0
                                    },
                                    "port": {
                                      "type": "integer",
                                      "description": "port of node",
                                      "minimum": 1
                                    }
                                  },
                                  "required": [
                                    "host",
                                    "port",
                                    "weight"
                                  ]
                                }
                              }
                            ]
                          },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "requests": {
                                "type": "integer",
                                "minimum": 1,
                                "default": 1000
                              },
                              "idle_timeout": {
                                "type": "number",
                                "minimum": 0,
                                "default": 60
                              },
                              "size": {
                                "type": "integer",
                                "minimum": 1,
                                "default": 320
                              }
                            }
                          },
                          "hash_on": {
                            "type": "string",
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "default": "vars"
                          },
                          "service_name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 256
                          },
                          "checks": {
                            "type": "object",
                            "properties": {
                              "passive": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "tcp"
                                    ],
                                    "default": "http"
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "timeouts": {
                                        "type": "integer",
                                        "default": 7,
                                        "maximum": 254,
                                        "minimum": 0
                                      },
                                      "http_failures": {
                                        "type": "integer",
                                        "default": 5,
                                        "maximum": 254,
                                        "minimum": 0
                                      },
                                      "http_statuses": {
                                        "type": "array",
                                        "default": [
                                          429,
                                          500,
                                          503
                                        ],
                                        "minItems": 1,
                                        "items": {
                                          "type": "integer",
                                          "maximum": 599,
                                          "minimum": 200
                                        },
                                        "uniqueItems": true
                                      },
                                      "tcp_failures": {
                                        "type": "integer",
                                        "default": 2,
                                        "maximum": 254,
                                        "minimum": 0
                                      }
                                    }
                                  },
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "default": [
                                          200,
                                          201,
                                          202,
                                          203,
                                          204,
                                          205,
                                          206,
                                          207,
                                          208,
                                          226,
                                          300,
                                          301,
                                          302,
                                          303,
                                          304,
                                          305,
                                          306,
                                          307,
                                          308
                                        ],
                                        "minItems": 1,
                                        "items": {
                                          "type": "integer",
                                          "maximum": 599,
                                          "minimum": 200
                                        },
                                        "uniqueItems": true
                                      },
                                      "successes": {
                                        "type": "integer",
                                        "default": 5,
                                        "maximum": 254,
                                        "minimum": 0
                                      }
                                    }
                                  }
                                },
                                "default": {
                                  "type": "http",
                                  "unhealthy": {
                                    "timeouts": 0,
                                    "http_failures": 0,
                                    "http_statuses": [
                                      429,
                                      500,
                                      503
                                    ],
                                    "tcp_failures": 0
                                  },
                                  "healthy": {
                                    "http_statuses": [
                                      200,
                                      201,
                                      202,
                                      203,
                                      204,
                                      205,
                                      206,
                                      207,
                                      208,
                                      226,
                                      300,
                                      301,
                                      302,
                                      303,
                                      304,
                                      305,
                                      306,
                                      307,
                                      308
                                    ],
                                    "successes": 0
                                  }
                                }
                              },
                              "active": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "http",
                                      "https",
                                      "tcp"
                                    ],
                                    "default": "http"
                                  },
                                  "timeout": {
                                    "type": "number",
                                    "default": 1
                                  },
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "successes": {
                                        "type": "integer",
                                        "default": 2,
                                        "maximum": 254,
                                        "minimum": 1
                                      },
                                      "interval": {
                                        "type": "integer",
                                        "default": 1,
                                        "minimum": 1
                                      },
                                      "http_statuses": {
                                        "type": "array",
                                        "default": [
                                          200,
                                          302
                                        ],
                                        "minItems": 1,
                                        "items": {
                                          "type": "integer",
                                          "maximum": 599,
                                          "minimum": 200
                                        },
                                        "uniqueItems": true
                                      }
                                    }
                                  },
                                  "req_headers": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                      "type": "string",
                                      "uniqueItems": true
                                    }
                                  },
                                  "host": {
                                    "type": "string",
                                    "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "type": "array",
                                        "default": [
                                          429,
                                          404,
                                          500,
                                          501,
                                          502,
                                          503,
                                          504,
                                          505
                                        ],
                                        "minItems": 1,
                                        "items": {
                                          "type": "integer",
                                          "maximum": 599,
                                          "minimum": 200
                                        },
                                        "uniqueItems": true
                                      },
                                      "tcp_failures": {
                                        "type": "integer",
                                        "default": 2,
                                        "maximum": 254,
                                        "minimum": 1
                                      },
                                      "timeouts": {
                                        "type": "integer",
                                        "default": 3,
                                        "maximum": 254,
                                        "minimum": 1
                                      },
                                      "interval": {
                                        "type": "integer",
                                        "default": 1,
                                        "minimum": 1
                                      },
                                      "http_failures": {
                                        "type": "integer",
                                        "default": 5,
                                        "maximum": 254,
                                        "minimum": 1
                                      }
                                    }
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "port": {
                                    "type": "integer",
                                    "maximum": 65535,
                                    "minimum": 1
                                  },
                                  "concurrency": {
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "http_path": {
                                    "type": "string",
                                    "default": "\/"
                                  }
                                }
                              }
                            },
                            "anyOf": [
                              {
                                "required": [
                                  "active"
                                ]
                              },
                              {
                                "required": [
                                  "active",
                                  "passive"
                                ]
                              }
                            ]
                          },
                          "update_time": {
                            "type": "integer"
                          },
                          "discovery_type": {
                            "description": "discovery type",
                            "type": "string"
                          },
                          "timeout": {
                            "type": "object",
                            "properties": {
                              "connect": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              },
                              "send": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              },
                              "read": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              }
                            },
                            "required": [
                              "connect",
                              "send",
                              "read"
                            ]
                          },
                          "discovery_args": {
                            "type": "object",
                            "properties": {
                              "namespace_id": {
                                "description": "namespace id",
                                "type": "string"
                              },
                              "group_name": {
                                "description": "group name",
                                "type": "string"
                              }
                            }
                          },
                          "key": {
                            "description": "the key of chash for dynamic load balancing",
                            "type": "string"
                          },
                          "desc": {
                            "type": "string",
                            "maxLength": 256
                          },
                          "id": {
                            "anyOf": [
                              {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z0-9-_.]+$"
                              },
                              {
                                "type": "integer",
                                "minimum": 1
                              }
                            ]
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 100
                          },
                          "upstream_host": {
                            "type": "string",
                            "pattern": "^\\*?[0-9a-zA-Z-._]+$"
                          },
                          "tls": {
                            "type": "object",
                            "properties": {
                              "client_cert": {
                                "type": "string",
                                "minLength": 128,
                                "maxLength": 65536
                              },
                              "client_key": {
                                "type": "string",
                                "minLength": 128,
                                "maxLength": 65536
                              }
                            },
                            "required": [
                              "client_cert",
                              "client_key"
                            ]
                          },
                          "scheme": {
                            "default": "http",
                            "enum": [
                              "grpc",
                              "grpcs",
                              "http",
                              "https",
                              "tcp",
                              "tls",
                              "udp"
                            ],
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc\/grpcs\/http\/https. For L4 proxy, it can be one of tcp\/tls\/udp."
                          },
                          "labels": {
                            "type": "object",
                            "description": "key\/value pairs to specify attributes",
                            "patternProperties": {
                              ".*": {
                                "type": "string",
                                "description": "value of label",
                                "pattern": "^\\S+$",
                                "maxLength": 64,
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "oneOf": [
                          {
                            "required": [
                              "type",
                              "nodes"
                            ]
                          },
                          {
                            "required": [
                              "type",
                              "service_name",
                              "discovery_type"
                            ]
                          }
                        ]
                      },
                      "weight": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "used to split traffic between differentupstreams for plugin configuration",
                        "default": 1
                      }
                    }
                  },
                  "maxItems": 20
                }
              }
            }
          },
          "disable": {
            "type": "boolean"
          }
        }
      },
      "priority": 966,
      "version": 0.1
    },
    "grpc-transcode": {
      "schema": {
        "type": "object",
        "properties": {
          "method": {
            "description": "the method name in the grpc service.",
            "type": "string"
          },
          "proto_id": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$"
              },
              {
                "type": "integer",
                "minimum": 1
              }
            ]
          },
          "disable": {
            "type": "boolean"
          },
          "service": {
            "description": "the grpc service name",
            "type": "string"
          },
          "pb_option": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "type": "string",
                  "description": "enum as result",
                  "enum": [
                    "int64_as_number",
                    "int64_as_string",
                    "int64_as_hexstring"
                  ]
                },
                {
                  "type": "string",
                  "description": "int64 as result",
                  "enum": [
                    "enum_as_name",
                    "enum_as_value"
                  ]
                },
                {
                  "type": "string",
                  "description": "default values option",
                  "enum": [
                    "auto_default_values",
                    "no_default_values",
                    "use_default_values",
                    "use_default_metatable"
                  ]
                },
                {
                  "type": "string",
                  "description": "hooks option",
                  "enum": [
                    "enable_hooks",
                    "disable_hooks"
                  ]
                }
              ]
            }
          },
          "deadline": {
            "type": "number",
            "description": "deadline for grpc, millisecond",
            "default": 0
          }
        },
        "additionalProperties": true,
        "required": [
          "proto_id",
          "service",
          "method"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "priority": 506,
      "version": 0.1
    },
    "serverless-post-function": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "functions": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            }
          },
          "disable": {
            "type": "boolean"
          },
          "phase": {
            "type": "string",
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "default": "access"
          }
        },
        "required": [
          "functions"
        ]
      },
      "priority": -2000,
      "version": 0.1
    },
    "http-logger": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "auth_header": {
            "type": "string",
            "default": ""
          },
          "ssl_verify": {
            "type": "boolean",
            "default": false
          },
          "name": {
            "type": "string",
            "default": "http logger"
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          },
          "include_resp_body": {
            "type": "boolean",
            "default": false
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "disable": {
            "type": "boolean"
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "timeout": {
            "type": "integer",
            "default": 3,
            "minimum": 1
          },
          "uri": {
            "type": "string",
            "pattern": "^[^\\\/]+:\\\/\\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
          },
          "include_resp_body_expr": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "array"
            }
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "concat_method": {
            "type": "string",
            "enum": [
              "json",
              "new_line"
            ],
            "default": "json"
          }
        },
        "required": [
          "uri"
        ]
      },
      "priority": 410,
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "host": "$host",
              "client_ip": "$remote_addr",
              "@timestamp": "$time_iso8601"
            }
          }
        }
      }
    },
    "tcp-logger": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "name": {
            "type": "string",
            "default": "tcp logger"
          },
          "tls_options": {
            "type": "string"
          },
          "tls": {
            "type": "boolean",
            "default": false
          },
          "timeout": {
            "type": "integer",
            "default": 1000,
            "minimum": 1
          },
          "host": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "port": {
            "type": "integer",
            "minimum": 0
          },
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          }
        },
        "required": [
          "host",
          "port"
        ]
      },
      "priority": 405,
      "version": 0.1
    },
    "cors": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "allow_headers": {
            "type": "string",
            "description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "default": "*"
          },
          "allow_methods": {
            "type": "string",
            "description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
            "default": "*"
          },
          "allow_origins": {
            "type": "string",
            "pattern": "^(\\*|\\*\\*|null|\\w+:\/\/[^,]+(,\\w+:\/\/[^,]+)*)$",
            "description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
            "default": "*"
          },
          "expose_headers": {
            "type": "string",
            "description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "default": "*"
          },
          "disable": {
            "type": "boolean"
          },
          "allow_origins_by_regex": {
            "type": "array",
            "description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
            "minItems": 1,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4096
            },
            "uniqueItems": true
          },
          "allow_origins_by_metadata": {
            "type": "array",
            "description": "set allowed origins by referencing origins in plugin metadata",
            "minItems": 1,
            "items": {
              "type": "string",
              "minLength": 1,
              "maxLength": 4096
            },
            "uniqueItems": true
          },
          "max_age": {
            "type": "integer",
            "description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5.",
            "default": 5
          },
          "allow_credential": {
            "type": "boolean",
            "description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
            "default": false
          }
        }
      },
      "priority": 4000,
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "allow_origins": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "pattern": "^(\\*|\\*\\*|null|\\w+:\/\/[^,]+(,\\w+:\/\/[^,]+)*)$"
            }
          }
        }
      }
    },
    "pixcc-plugin": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "inject_app_id": {
            "type": "string",
            "default": "pixcc-app-id"
          },
          "inject_route_id": {
            "type": "string",
            "default": "pixcc-route-id"
          },
          "app_id_extract_fields": {
            "type": "array",
            "description": "List of key reference fields used to extract appid of client request",
            "items": {
              "type": "string"
            },
            "default": [
              "appId",
              "app_id",
              "X-App-Id",
              "X-Request-AppId"
            ]
          },
          "disable": {
            "type": "boolean"
          },
          "pixcc_client_key": {
            "type": "string",
            "default": "x-pixcc-client"
          }
        }
      },
      "priority": 6001,
      "version": 0.1,
      "scope": "global"
    },
    "athena-auth": {
      "type": "auth",
      "priority": 1,
      "version": 0.1,
      "schema": {
        "type": "object",
        "properties": {
          "app_table": {
            "type": "object"
          },
          "bearer_only": {
            "type": "boolean"
          },
          "uri": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "whitelist": {
            "type": "array"
          },
          "auth_only_list": {
            "type": "array"
          }
        },
        "required": [
          "app_table",
          "bearer_only",
          "uri"
        ],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "metadata_schema": {
        "type": "object",
        "properties": {
          "skey": {
            "type": "string"
          },
          "ikey": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "ikey",
          "skey"
        ]
      }
    },
    "udp-logger": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "name": {
            "type": "string",
            "default": "udp logger"
          },
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "host": {
            "type": "string"
          },
          "disable": {
            "type": "boolean"
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "port": {
            "type": "integer",
            "minimum": 0
          },
          "timeout": {
            "type": "integer",
            "default": 3,
            "minimum": 1
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          }
        },
        "required": [
          "host",
          "port"
        ]
      },
      "priority": 400,
      "version": 0.1
    },
    "node-status": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": {
            "type": "boolean"
          }
        }
      },
      "priority": 1000,
      "version": 0.1,
      "scope": "global"
    },
    "syslog": {
      "schema": {
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "inactive_timeout": {
            "type": "integer",
            "minimum": 1,
            "default": 5
          },
          "host": {
            "type": "string"
          },
          "include_req_body": {
            "type": "boolean",
            "default": false
          },
          "max_retry_times": {
            "type": "integer",
            "minimum": 1
          },
          "retry_interval": {
            "type": "integer",
            "minimum": 0
          },
          "flush_limit": {
            "type": "integer",
            "default": 4096,
            "minimum": 1
          },
          "drop_limit": {
            "type": "integer",
            "default": 1048576
          },
          "sock_type": {
            "type": "string",
            "enum": [
              "tcp",
              "udp"
            ],
            "default": "tcp"
          },
          "port": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "default": "sys logger"
          },
          "timeout": {
            "type": "integer",
            "default": 3,
            "minimum": 1
          },
          "tls": {
            "type": "boolean",
            "default": false
          },
          "disable": {
            "type": "boolean"
          },
          "pool_size": {
            "type": "integer",
            "default": 5,
            "minimum": 5
          },
          "batch_max_size": {
            "type": "integer",
            "minimum": 1,
            "default": 1000
          },
          "max_retry_count": {
            "type": "integer",
            "minimum": 0,
            "default": 0
          },
          "retry_delay": {
            "type": "integer",
            "minimum": 0,
            "default": 1
          },
          "buffer_duration": {
            "type": "integer",
            "minimum": 1,
            "default": 60
          }
        },
        "required": [
          "host",
          "port"
        ]
      },
      "priority": 401,
      "version": 0.1
    }
  }
}